/**
 */
package org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.util.XElevatorPropertyAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class XElevatorPropertyItemProviderAdapterFactory extends XElevatorPropertyAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XElevatorPropertyItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ButtonPressProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ButtonPressPropertyItemProvider buttonPressPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ButtonPressProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createButtonPressPropertyAdapter() {
		if (buttonPressPropertyItemProvider == null) {
			buttonPressPropertyItemProvider = new ButtonPressPropertyItemProvider(this);
		}

		return buttonPressPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorChangeToUpProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorChangeToUpPropertyItemProvider elevatorChangeToUpPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorChangeToUpProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorChangeToUpPropertyAdapter() {
		if (elevatorChangeToUpPropertyItemProvider == null) {
			elevatorChangeToUpPropertyItemProvider = new ElevatorChangeToUpPropertyItemProvider(this);
		}

		return elevatorChangeToUpPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorCloseDoorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorCloseDoorPropertyItemProvider elevatorCloseDoorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorCloseDoorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorCloseDoorPropertyAdapter() {
		if (elevatorCloseDoorPropertyItemProvider == null) {
			elevatorCloseDoorPropertyItemProvider = new ElevatorCloseDoorPropertyItemProvider(this);
		}

		return elevatorCloseDoorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorChangeToDownProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorChangeToDownPropertyItemProvider elevatorChangeToDownPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorChangeToDownProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorChangeToDownPropertyAdapter() {
		if (elevatorChangeToDownPropertyItemProvider == null) {
			elevatorChangeToDownPropertyItemProvider = new ElevatorChangeToDownPropertyItemProvider(this);
		}

		return elevatorChangeToDownPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorMoveUpProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorMoveUpPropertyItemProvider elevatorMoveUpPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorMoveUpProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorMoveUpPropertyAdapter() {
		if (elevatorMoveUpPropertyItemProvider == null) {
			elevatorMoveUpPropertyItemProvider = new ElevatorMoveUpPropertyItemProvider(this);
		}

		return elevatorMoveUpPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorOpenDoorUpProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorOpenDoorUpPropertyItemProvider elevatorOpenDoorUpPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorOpenDoorUpProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorOpenDoorUpPropertyAdapter() {
		if (elevatorOpenDoorUpPropertyItemProvider == null) {
			elevatorOpenDoorUpPropertyItemProvider = new ElevatorOpenDoorUpPropertyItemProvider(this);
		}

		return elevatorOpenDoorUpPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorMoveDownProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorMoveDownPropertyItemProvider elevatorMoveDownPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorMoveDownProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorMoveDownPropertyAdapter() {
		if (elevatorMoveDownPropertyItemProvider == null) {
			elevatorMoveDownPropertyItemProvider = new ElevatorMoveDownPropertyItemProvider(this);
		}

		return elevatorMoveDownPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorOpenDoorDownProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorOpenDoorDownPropertyItemProvider elevatorOpenDoorDownPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorOpenDoorDownProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorOpenDoorDownPropertyAdapter() {
		if (elevatorOpenDoorDownPropertyItemProvider == null) {
			elevatorOpenDoorDownPropertyItemProvider = new ElevatorOpenDoorDownPropertyItemProvider(this);
		}

		return elevatorOpenDoorDownPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryFloorPropertyItemProvider unaryFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryFloorPropertyAdapter() {
		if (unaryFloorPropertyItemProvider == null) {
			unaryFloorPropertyItemProvider = new UnaryFloorPropertyItemProvider(this);
		}

		return unaryFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryFloorPropertyItemProvider binaryFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryFloorPropertyAdapter() {
		if (binaryFloorPropertyItemProvider == null) {
			binaryFloorPropertyItemProvider = new BinaryFloorPropertyItemProvider(this);
		}

		return binaryFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorNextProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorNextPropertyItemProvider floorNextPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorNextProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorNextPropertyAdapter() {
		if (floorNextPropertyItemProvider == null) {
			floorNextPropertyItemProvider = new FloorNextPropertyItemProvider(this);
		}

		return floorNextPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorNrProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorNrPropertyItemProvider floorNrPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorNrProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorNrPropertyAdapter() {
		if (floorNrPropertyItemProvider == null) {
			floorNrPropertyItemProvider = new FloorNrPropertyItemProvider(this);
		}

		return floorNrPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorFloorButtonsProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorFloorButtonsPropertyItemProvider floorFloorButtonsPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorFloorButtonsProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorFloorButtonsPropertyAdapter() {
		if (floorFloorButtonsPropertyItemProvider == null) {
			floorFloorButtonsPropertyItemProvider = new FloorFloorButtonsPropertyItemProvider(this);
		}

		return floorFloorButtonsPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryButtonPropertyItemProvider unaryButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryButtonPropertyAdapter() {
		if (unaryButtonPropertyItemProvider == null) {
			unaryButtonPropertyItemProvider = new UnaryButtonPropertyItemProvider(this);
		}

		return unaryButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryButtonPropertyItemProvider binaryButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryButtonPropertyAdapter() {
		if (binaryButtonPropertyItemProvider == null) {
			binaryButtonPropertyItemProvider = new BinaryButtonPropertyItemProvider(this);
		}

		return binaryButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ButtonRequestedFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ButtonRequestedFloorPropertyItemProvider buttonRequestedFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ButtonRequestedFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createButtonRequestedFloorPropertyAdapter() {
		if (buttonRequestedFloorPropertyItemProvider == null) {
			buttonRequestedFloorPropertyItemProvider = new ButtonRequestedFloorPropertyItemProvider(this);
		}

		return buttonRequestedFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ButtonPressedProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ButtonPressedPropertyItemProvider buttonPressedPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ButtonPressedProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createButtonPressedPropertyAdapter() {
		if (buttonPressedPropertyItemProvider == null) {
			buttonPressedPropertyItemProvider = new ButtonPressedPropertyItemProvider(this);
		}

		return buttonPressedPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorPreviousProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorPreviousPropertyItemProvider floorPreviousPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorPreviousProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorPreviousPropertyAdapter() {
		if (floorPreviousPropertyItemProvider == null) {
			floorPreviousPropertyItemProvider = new FloorPreviousPropertyItemProvider(this);
		}

		return floorPreviousPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryElevatorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryElevatorPropertyItemProvider unaryElevatorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryElevatorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryElevatorPropertyAdapter() {
		if (unaryElevatorPropertyItemProvider == null) {
			unaryElevatorPropertyItemProvider = new UnaryElevatorPropertyItemProvider(this);
		}

		return unaryElevatorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryElevatorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryElevatorPropertyItemProvider binaryElevatorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryElevatorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryElevatorPropertyAdapter() {
		if (binaryElevatorPropertyItemProvider == null) {
			binaryElevatorPropertyItemProvider = new BinaryElevatorPropertyItemProvider(this);
		}

		return binaryElevatorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorButtonContainerProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorButtonContainerPropertyItemProvider elevatorButtonContainerPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorButtonContainerProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorButtonContainerPropertyAdapter() {
		if (elevatorButtonContainerPropertyItemProvider == null) {
			elevatorButtonContainerPropertyItemProvider = new ElevatorButtonContainerPropertyItemProvider(this);
		}

		return elevatorButtonContainerPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryElevatorButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryElevatorButtonPropertyItemProvider unaryElevatorButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryElevatorButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryElevatorButtonPropertyAdapter() {
		if (unaryElevatorButtonPropertyItemProvider == null) {
			unaryElevatorButtonPropertyItemProvider = new UnaryElevatorButtonPropertyItemProvider(this);
		}

		return unaryElevatorButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryElevatorButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryElevatorButtonPropertyItemProvider binaryElevatorButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryElevatorButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryElevatorButtonPropertyAdapter() {
		if (binaryElevatorButtonPropertyItemProvider == null) {
			binaryElevatorButtonPropertyItemProvider = new BinaryElevatorButtonPropertyItemProvider(this);
		}

		return binaryElevatorButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorButtonRequestedFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorButtonRequestedFloorPropertyItemProvider elevatorButtonRequestedFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorButtonRequestedFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorButtonRequestedFloorPropertyAdapter() {
		if (elevatorButtonRequestedFloorPropertyItemProvider == null) {
			elevatorButtonRequestedFloorPropertyItemProvider = new ElevatorButtonRequestedFloorPropertyItemProvider(this);
		}

		return elevatorButtonRequestedFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorButtonPressedProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorButtonPressedPropertyItemProvider elevatorButtonPressedPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorButtonPressedProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorButtonPressedPropertyAdapter() {
		if (elevatorButtonPressedPropertyItemProvider == null) {
			elevatorButtonPressedPropertyItemProvider = new ElevatorButtonPressedPropertyItemProvider(this);
		}

		return elevatorButtonPressedPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorElevatorButtonsProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorElevatorButtonsPropertyItemProvider elevatorElevatorButtonsPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorElevatorButtonsProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorElevatorButtonsPropertyAdapter() {
		if (elevatorElevatorButtonsPropertyItemProvider == null) {
			elevatorElevatorButtonsPropertyItemProvider = new ElevatorElevatorButtonsPropertyItemProvider(this);
		}

		return elevatorElevatorButtonsPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorDoorsOpenProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorDoorsOpenPropertyItemProvider elevatorDoorsOpenPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorDoorsOpenProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorDoorsOpenPropertyAdapter() {
		if (elevatorDoorsOpenPropertyItemProvider == null) {
			elevatorDoorsOpenPropertyItemProvider = new ElevatorDoorsOpenPropertyItemProvider(this);
		}

		return elevatorDoorsOpenPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorGoingUpProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorGoingUpPropertyItemProvider elevatorGoingUpPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorGoingUpProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorGoingUpPropertyAdapter() {
		if (elevatorGoingUpPropertyItemProvider == null) {
			elevatorGoingUpPropertyItemProvider = new ElevatorGoingUpPropertyItemProvider(this);
		}

		return elevatorGoingUpPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorCurrentFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorCurrentFloorPropertyItemProvider elevatorCurrentFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorCurrentFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorCurrentFloorPropertyAdapter() {
		if (elevatorCurrentFloorPropertyItemProvider == null) {
			elevatorCurrentFloorPropertyItemProvider = new ElevatorCurrentFloorPropertyItemProvider(this);
		}

		return elevatorCurrentFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryFloorButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryFloorButtonPropertyItemProvider unaryFloorButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryFloorButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryFloorButtonPropertyAdapter() {
		if (unaryFloorButtonPropertyItemProvider == null) {
			unaryFloorButtonPropertyItemProvider = new UnaryFloorButtonPropertyItemProvider(this);
		}

		return unaryFloorButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryFloorButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryFloorButtonPropertyItemProvider binaryFloorButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryFloorButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryFloorButtonPropertyAdapter() {
		if (binaryFloorButtonPropertyItemProvider == null) {
			binaryFloorButtonPropertyItemProvider = new BinaryFloorButtonPropertyItemProvider(this);
		}

		return binaryFloorButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorButtonRequestedFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorButtonRequestedFloorPropertyItemProvider floorButtonRequestedFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorButtonRequestedFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorButtonRequestedFloorPropertyAdapter() {
		if (floorButtonRequestedFloorPropertyItemProvider == null) {
			floorButtonRequestedFloorPropertyItemProvider = new FloorButtonRequestedFloorPropertyItemProvider(this);
		}

		return floorButtonRequestedFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorButtonPressedProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorButtonPressedPropertyItemProvider floorButtonPressedPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorButtonPressedProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorButtonPressedPropertyAdapter() {
		if (floorButtonPressedPropertyItemProvider == null) {
			floorButtonPressedPropertyItemProvider = new FloorButtonPressedPropertyItemProvider(this);
		}

		return floorButtonPressedPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryUpButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryUpButtonPropertyItemProvider unaryUpButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryUpButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryUpButtonPropertyAdapter() {
		if (unaryUpButtonPropertyItemProvider == null) {
			unaryUpButtonPropertyItemProvider = new UnaryUpButtonPropertyItemProvider(this);
		}

		return unaryUpButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryUpButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryUpButtonPropertyItemProvider binaryUpButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryUpButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryUpButtonPropertyAdapter() {
		if (binaryUpButtonPropertyItemProvider == null) {
			binaryUpButtonPropertyItemProvider = new BinaryUpButtonPropertyItemProvider(this);
		}

		return binaryUpButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UpButtonRequestedFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpButtonRequestedFloorPropertyItemProvider upButtonRequestedFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UpButtonRequestedFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpButtonRequestedFloorPropertyAdapter() {
		if (upButtonRequestedFloorPropertyItemProvider == null) {
			upButtonRequestedFloorPropertyItemProvider = new UpButtonRequestedFloorPropertyItemProvider(this);
		}

		return upButtonRequestedFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UpButtonPressedProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpButtonPressedPropertyItemProvider upButtonPressedPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UpButtonPressedProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpButtonPressedPropertyAdapter() {
		if (upButtonPressedPropertyItemProvider == null) {
			upButtonPressedPropertyItemProvider = new UpButtonPressedPropertyItemProvider(this);
		}

		return upButtonPressedPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryDownButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryDownButtonPropertyItemProvider unaryDownButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryDownButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryDownButtonPropertyAdapter() {
		if (unaryDownButtonPropertyItemProvider == null) {
			unaryDownButtonPropertyItemProvider = new UnaryDownButtonPropertyItemProvider(this);
		}

		return unaryDownButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryDownButtonProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryDownButtonPropertyItemProvider binaryDownButtonPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryDownButtonProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryDownButtonPropertyAdapter() {
		if (binaryDownButtonPropertyItemProvider == null) {
			binaryDownButtonPropertyItemProvider = new BinaryDownButtonPropertyItemProvider(this);
		}

		return binaryDownButtonPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.DownButtonRequestedFloorProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DownButtonRequestedFloorPropertyItemProvider downButtonRequestedFloorPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.DownButtonRequestedFloorProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDownButtonRequestedFloorPropertyAdapter() {
		if (downButtonRequestedFloorPropertyItemProvider == null) {
			downButtonRequestedFloorPropertyItemProvider = new DownButtonRequestedFloorPropertyItemProvider(this);
		}

		return downButtonRequestedFloorPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.DownButtonPressedProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DownButtonPressedPropertyItemProvider downButtonPressedPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.DownButtonPressedProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDownButtonPressedPropertyAdapter() {
		if (downButtonPressedPropertyItemProvider == null) {
			downButtonPressedPropertyItemProvider = new DownButtonPressedPropertyItemProvider(this);
		}

		return downButtonPressedPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryElevatorSystemProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryElevatorSystemPropertyItemProvider unaryElevatorSystemPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.UnaryElevatorSystemProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryElevatorSystemPropertyAdapter() {
		if (unaryElevatorSystemPropertyItemProvider == null) {
			unaryElevatorSystemPropertyItemProvider = new UnaryElevatorSystemPropertyItemProvider(this);
		}

		return unaryElevatorSystemPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryElevatorSystemProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryElevatorSystemPropertyItemProvider binaryElevatorSystemPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.BinaryElevatorSystemProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryElevatorSystemPropertyAdapter() {
		if (binaryElevatorSystemPropertyItemProvider == null) {
			binaryElevatorSystemPropertyItemProvider = new BinaryElevatorSystemPropertyItemProvider(this);
		}

		return binaryElevatorSystemPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorContainerProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorContainerPropertyItemProvider elevatorContainerPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorContainerProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorContainerPropertyAdapter() {
		if (elevatorContainerPropertyItemProvider == null) {
			elevatorContainerPropertyItemProvider = new ElevatorContainerPropertyItemProvider(this);
		}

		return elevatorContainerPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorSystemElevatorsProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorSystemElevatorsPropertyItemProvider elevatorSystemElevatorsPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorSystemElevatorsProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorSystemElevatorsPropertyAdapter() {
		if (elevatorSystemElevatorsPropertyItemProvider == null) {
			elevatorSystemElevatorsPropertyItemProvider = new ElevatorSystemElevatorsPropertyItemProvider(this);
		}

		return elevatorSystemElevatorsPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorContainerProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloorContainerPropertyItemProvider floorContainerPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.FloorContainerProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloorContainerPropertyAdapter() {
		if (floorContainerPropertyItemProvider == null) {
			floorContainerPropertyItemProvider = new FloorContainerPropertyItemProvider(this);
		}

		return floorContainerPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorSystemFloorsProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevatorSystemFloorsPropertyItemProvider elevatorSystemFloorsPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.ElevatorSystemFloorsProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElevatorSystemFloorsPropertyAdapter() {
		if (elevatorSystemFloorsPropertyItemProvider == null) {
			elevatorSystemFloorsPropertyItemProvider = new ElevatorSystemFloorsPropertyItemProvider(this);
		}

		return elevatorSystemFloorsPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorNextProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XElevatorNextPropertyItemProvider xElevatorNextPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorNextProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXElevatorNextPropertyAdapter() {
		if (xElevatorNextPropertyItemProvider == null) {
			xElevatorNextPropertyItemProvider = new XElevatorNextPropertyItemProvider(this);
		}

		return xElevatorNextPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorUntilProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XElevatorUntilPropertyItemProvider xElevatorUntilPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorUntilProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXElevatorUntilPropertyAdapter() {
		if (xElevatorUntilPropertyItemProvider == null) {
			xElevatorUntilPropertyItemProvider = new XElevatorUntilPropertyItemProvider(this);
		}

		return xElevatorUntilPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorReleaseProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XElevatorReleasePropertyItemProvider xElevatorReleasePropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorReleaseProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXElevatorReleasePropertyAdapter() {
		if (xElevatorReleasePropertyItemProvider == null) {
			xElevatorReleasePropertyItemProvider = new XElevatorReleasePropertyItemProvider(this);
		}

		return xElevatorReleasePropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorNegationTemporalProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XElevatorNegationTemporalPropertyItemProvider xElevatorNegationTemporalPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.tetrabox.example.xelevator.scenario.xelevatorscenario.XElevatorProperty.XElevatorNegationTemporalProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXElevatorNegationTemporalPropertyAdapter() {
		if (xElevatorNegationTemporalPropertyItemProvider == null) {
			xElevatorNegationTemporalPropertyItemProvider = new XElevatorNegationTemporalPropertyItemProvider(this);
		}

		return xElevatorNegationTemporalPropertyItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (buttonPressPropertyItemProvider != null) buttonPressPropertyItemProvider.dispose();
		if (elevatorChangeToUpPropertyItemProvider != null) elevatorChangeToUpPropertyItemProvider.dispose();
		if (elevatorCloseDoorPropertyItemProvider != null) elevatorCloseDoorPropertyItemProvider.dispose();
		if (elevatorChangeToDownPropertyItemProvider != null) elevatorChangeToDownPropertyItemProvider.dispose();
		if (elevatorMoveUpPropertyItemProvider != null) elevatorMoveUpPropertyItemProvider.dispose();
		if (elevatorOpenDoorUpPropertyItemProvider != null) elevatorOpenDoorUpPropertyItemProvider.dispose();
		if (elevatorMoveDownPropertyItemProvider != null) elevatorMoveDownPropertyItemProvider.dispose();
		if (elevatorOpenDoorDownPropertyItemProvider != null) elevatorOpenDoorDownPropertyItemProvider.dispose();
		if (unaryFloorPropertyItemProvider != null) unaryFloorPropertyItemProvider.dispose();
		if (binaryFloorPropertyItemProvider != null) binaryFloorPropertyItemProvider.dispose();
		if (floorNextPropertyItemProvider != null) floorNextPropertyItemProvider.dispose();
		if (floorNrPropertyItemProvider != null) floorNrPropertyItemProvider.dispose();
		if (floorFloorButtonsPropertyItemProvider != null) floorFloorButtonsPropertyItemProvider.dispose();
		if (unaryButtonPropertyItemProvider != null) unaryButtonPropertyItemProvider.dispose();
		if (binaryButtonPropertyItemProvider != null) binaryButtonPropertyItemProvider.dispose();
		if (buttonRequestedFloorPropertyItemProvider != null) buttonRequestedFloorPropertyItemProvider.dispose();
		if (buttonPressedPropertyItemProvider != null) buttonPressedPropertyItemProvider.dispose();
		if (floorPreviousPropertyItemProvider != null) floorPreviousPropertyItemProvider.dispose();
		if (unaryElevatorPropertyItemProvider != null) unaryElevatorPropertyItemProvider.dispose();
		if (binaryElevatorPropertyItemProvider != null) binaryElevatorPropertyItemProvider.dispose();
		if (elevatorButtonContainerPropertyItemProvider != null) elevatorButtonContainerPropertyItemProvider.dispose();
		if (unaryElevatorButtonPropertyItemProvider != null) unaryElevatorButtonPropertyItemProvider.dispose();
		if (binaryElevatorButtonPropertyItemProvider != null) binaryElevatorButtonPropertyItemProvider.dispose();
		if (elevatorButtonRequestedFloorPropertyItemProvider != null) elevatorButtonRequestedFloorPropertyItemProvider.dispose();
		if (elevatorButtonPressedPropertyItemProvider != null) elevatorButtonPressedPropertyItemProvider.dispose();
		if (elevatorElevatorButtonsPropertyItemProvider != null) elevatorElevatorButtonsPropertyItemProvider.dispose();
		if (elevatorDoorsOpenPropertyItemProvider != null) elevatorDoorsOpenPropertyItemProvider.dispose();
		if (elevatorGoingUpPropertyItemProvider != null) elevatorGoingUpPropertyItemProvider.dispose();
		if (elevatorCurrentFloorPropertyItemProvider != null) elevatorCurrentFloorPropertyItemProvider.dispose();
		if (unaryFloorButtonPropertyItemProvider != null) unaryFloorButtonPropertyItemProvider.dispose();
		if (binaryFloorButtonPropertyItemProvider != null) binaryFloorButtonPropertyItemProvider.dispose();
		if (floorButtonRequestedFloorPropertyItemProvider != null) floorButtonRequestedFloorPropertyItemProvider.dispose();
		if (floorButtonPressedPropertyItemProvider != null) floorButtonPressedPropertyItemProvider.dispose();
		if (unaryUpButtonPropertyItemProvider != null) unaryUpButtonPropertyItemProvider.dispose();
		if (binaryUpButtonPropertyItemProvider != null) binaryUpButtonPropertyItemProvider.dispose();
		if (upButtonRequestedFloorPropertyItemProvider != null) upButtonRequestedFloorPropertyItemProvider.dispose();
		if (upButtonPressedPropertyItemProvider != null) upButtonPressedPropertyItemProvider.dispose();
		if (unaryDownButtonPropertyItemProvider != null) unaryDownButtonPropertyItemProvider.dispose();
		if (binaryDownButtonPropertyItemProvider != null) binaryDownButtonPropertyItemProvider.dispose();
		if (downButtonRequestedFloorPropertyItemProvider != null) downButtonRequestedFloorPropertyItemProvider.dispose();
		if (downButtonPressedPropertyItemProvider != null) downButtonPressedPropertyItemProvider.dispose();
		if (unaryElevatorSystemPropertyItemProvider != null) unaryElevatorSystemPropertyItemProvider.dispose();
		if (binaryElevatorSystemPropertyItemProvider != null) binaryElevatorSystemPropertyItemProvider.dispose();
		if (elevatorContainerPropertyItemProvider != null) elevatorContainerPropertyItemProvider.dispose();
		if (elevatorSystemElevatorsPropertyItemProvider != null) elevatorSystemElevatorsPropertyItemProvider.dispose();
		if (floorContainerPropertyItemProvider != null) floorContainerPropertyItemProvider.dispose();
		if (elevatorSystemFloorsPropertyItemProvider != null) elevatorSystemFloorsPropertyItemProvider.dispose();
		if (xElevatorNextPropertyItemProvider != null) xElevatorNextPropertyItemProvider.dispose();
		if (xElevatorUntilPropertyItemProvider != null) xElevatorUntilPropertyItemProvider.dispose();
		if (xElevatorReleasePropertyItemProvider != null) xElevatorReleasePropertyItemProvider.dispose();
		if (xElevatorNegationTemporalPropertyItemProvider != null) xElevatorNegationTemporalPropertyItemProvider.dispose();
	}

}
